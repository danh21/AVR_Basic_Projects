
AVRASM ver. 2.1.30  D:\cd\AVR\Project\AVR_Basic_Projects\LCD\main\Debug\List\LCD.asm Sat Sep 09 19:39:28 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0071 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00004f 5454
000050 4820
000051 4e54
000052 4e00      	.DB  0x54,0x54,0x20,0x48,0x54,0x4E,0x0,0x4E
000053 7765
000054 6942
000055 3a65
000056 4420      	.DB  0x65,0x77,0x42,0x69,0x65,0x3A,0x20,0x44
000057 6e61
000058 0068
000059 6553
00005a 2065      	.DB  0x61,0x6E,0x68,0x0,0x53,0x65,0x65,0x20
00005b 6f79
00005c 2075
00005d 6f73
00005e 6e6f      	.DB  0x79,0x6F,0x75,0x20,0x73,0x6F,0x6F,0x6E
00005f 0021
000060 6f43
000061 6e75
000062 2074      	.DB  0x21,0x0,0x43,0x6F,0x75,0x6E,0x74,0x20
000063 7075
000064 203a
000065 6425
D:\cd\AVR\Project\AVR_Basic_Projects\LCD\main\Debug\List\LCD.asm(1144): warning: .cseg .db misalignment - padding zero byte
000066 0000      	.DB  0x75,0x70,0x3A,0x20,0x25,0x64,0x0
                 
                 __GLOBAL_INI_TBL:
000067 0007      	.DW  0x07
000068 0500      	.DW  _0xE
000069 009e      	.DW  _0x0*2
                 
00006a 000d      	.DW  0x0D
00006b 0507      	.DW  _0xE+7
00006c 00a5      	.DW  _0x0*2+7
                 
00006d 000e      	.DW  0x0E
00006e 0514      	.DW  _0xE+20
00006f 00b2      	.DW  _0x0*2+20
                 
                 _0xFFFFFFFF:
000070 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000071 94f8      	CLI
000072 27ee      	CLR  R30
000073 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000074 e0f1      	LDI  R31,1
000075 bff5      	OUT  MCUCR,R31
000076 bfe5      	OUT  MCUCR,R30
000077 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000079 e08d      	LDI  R24,(14-2)+1
00007a e0a2      	LDI  R26,2
00007b 27bb      	CLR  R27
                 __CLEAR_REG:
00007c 93ed      	ST   X+,R30
00007d 958a      	DEC  R24
00007e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000080 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000081 e0a0      	LDI  R26,LOW(__SRAM_START)
000082 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000083 93ed      	ST   X+,R30
000084 9701      	SBIW R24,1
000085 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000086 ecee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000087 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000088 9185      	LPM  R24,Z+
000089 9195      	LPM  R25,Z+
00008a 9700      	SBIW R24,0
00008b f061      	BREQ __GLOBAL_INI_END
00008c 91a5      	LPM  R26,Z+
00008d 91b5      	LPM  R27,Z+
00008e 9005      	LPM  R0,Z+
00008f 9015      	LPM  R1,Z+
000090 01bf      	MOVW R22,R30
000091 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000092 9005      	LPM  R0,Z+
000093 920d      	ST   X+,R0
000094 9701      	SBIW R24,1
000095 f7e1      	BRNE __GLOBAL_INI_LOOP
000096 01fb      	MOVW R30,R22
000097 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000098 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000099 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00009a bfed      	OUT  SPL,R30
00009b e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009d e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009e e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00009f 940c 011f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * main.c
                 ; *
                 ; * Created: 8/16/2022 5:13:27 PM
                 ; * Author: DELL
                 ; */
                 ;
                 ;#include "LCD_20x4_4b.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 _setup_port:
                 ; .FSTART _setup_port
0000a1 efec      	LDI  R30,LOW(252)
0000a2 bbe1      	OUT  0x11,R30
0000a3 9508      	RET
                 ; .FEND
                 _LCD_send4Bit:
                 ; .FSTART _LCD_send4Bit
0000a4 93aa      	ST   -Y,R26
                 ;	bits -> Y+0
0000a5 b3e2      	IN   R30,0x12
0000a6 70ef      	ANDI R30,LOW(0xF)
0000a7 940e 0328 	CALL SUBOPT_0x0
0000a9 70e1      	ANDI R30,LOW(0x1)
0000aa 95e2      	SWAP R30
0000ab 7fe0      	ANDI R30,0xF0
0000ac 2bea      	OR   R30,R26
0000ad 940e 0328 	CALL SUBOPT_0x0
0000af 95e6      	LSR  R30
0000b0 70e1      	ANDI R30,LOW(0x1)
0000b1 95e2      	SWAP R30
0000b2 7fe0      	ANDI R30,0xF0
0000b3 0fee      	LSL  R30
0000b4 2bea      	OR   R30,R26
0000b5 940e 0328 	CALL SUBOPT_0x0
0000b7 95e6      	LSR  R30
0000b8 95e6      	LSR  R30
0000b9 70e1      	ANDI R30,LOW(0x1)
0000ba 95e2      	SWAP R30
0000bb 7fe0      	ANDI R30,0xF0
0000bc 0fee      	LSL  R30
0000bd 0fee      	LSL  R30
0000be 2bea      	OR   R30,R26
0000bf 940e 0328 	CALL SUBOPT_0x0
0000c1 95e6      	LSR  R30
0000c2 95e6      	LSR  R30
0000c3 95e6      	LSR  R30
0000c4 70e1      	ANDI R30,LOW(0x1)
0000c5 95e7      	ROR  R30
0000c6 e0e0      	LDI  R30,0
0000c7 95e7      	ROR  R30
0000c8 2bea      	OR   R30,R26
0000c9 bbe2      	OUT  0x12,R30
0000ca c024      	RJMP _0x2060003
                 ; .FEND
                 _LCD_enable:
                 ; .FSTART _LCD_enable
0000cb 9a93      	SBI  0x12,3
0000cc e0a1      	LDI  R26,LOW(1)
0000cd e0b0      	LDI  R27,0
0000ce 940e 0359 	CALL _delay_ms
0000d0 9893      	CBI  0x12,3
0000d1 e0a1      	LDI  R26,LOW(1)
0000d2 e0b0      	LDI  R27,0
0000d3 940e 0359 	CALL _delay_ms
0000d5 9508      	RET
                 ; .FEND
                 _LCD_sendCmd:
                 ; .FSTART _LCD_sendCmd
0000d6 93aa      	ST   -Y,R26
                 ;	cmd -> Y+0
0000d7 9892      	CBI  0x12,2
0000d8 c00d      	RJMP _0x2060002
                 ; .FEND
                 _LCD_init:
                 ; .FSTART _LCD_init
0000d9 e0a2      	LDI  R26,LOW(2)
0000da dffb      	RCALL _LCD_sendCmd
0000db e2a8      	LDI  R26,LOW(40)
0000dc dff9      	RCALL _LCD_sendCmd
0000dd e0ac      	LDI  R26,LOW(12)
0000de dff7      	RCALL _LCD_sendCmd
0000df e0a6      	LDI  R26,LOW(6)
0000e0 dff5      	RCALL _LCD_sendCmd
0000e1 e0a1      	LDI  R26,LOW(1)
0000e2 dff3      	RCALL _LCD_sendCmd
0000e3 9508      	RET
                 ; .FEND
                 _LCD_sendData:
                 ; .FSTART _LCD_sendData
0000e4 93aa      	ST   -Y,R26
                 ;	data -> Y+0
0000e5 9a92      	SBI  0x12,2
                 _0x2060002:
0000e6 81e8      	LD   R30,Y
0000e7 95e2      	SWAP R30
0000e8 70ef      	ANDI R30,0xF
0000e9 2fae      	MOV  R26,R30
0000ea dfb9      	RCALL _LCD_send4Bit
0000eb dfdf      	RCALL _LCD_enable
0000ec 81a8      	LD   R26,Y
0000ed dfb6      	RCALL _LCD_send4Bit
0000ee dfdc      	RCALL _LCD_enable
                 _0x2060003:
0000ef 9621      	ADIW R28,1
0000f0 9508      	RET
                 ; .FEND
                 _LCD_printStr:
                 ; .FSTART _LCD_printStr
0000f1 93ba      	ST   -Y,R27
0000f2 93aa      	ST   -Y,R26
                 ;	*str -> Y+4
                 ;	row -> Y+2
                 ;	column -> Y+0
0000f3 81ea      	LDD  R30,Y+2
0000f4 81fb      	LDD  R31,Y+2+1
0000f5 9730      	SBIW R30,0
0000f6 f421      	BRNE _0x6
0000f7 81a8      	LD   R26,Y
0000f8 58a0      	SUBI R26,-LOW(128)
0000f9 dfdc      	RCALL _LCD_sendCmd
0000fa c017      	RJMP _0x5
                 _0x6:
0000fb 30e1      	CPI  R30,LOW(0x1)
0000fc e0a0      	LDI  R26,HIGH(0x1)
0000fd 07fa      	CPC  R31,R26
0000fe f421      	BRNE _0x7
0000ff 81a8      	LD   R26,Y
000100 54a0      	SUBI R26,-LOW(192)
000101 dfd4      	RCALL _LCD_sendCmd
000102 c00f      	RJMP _0x5
                 _0x7:
000103 30e2      	CPI  R30,LOW(0x2)
000104 e0a0      	LDI  R26,HIGH(0x2)
000105 07fa      	CPC  R31,R26
000106 f421      	BRNE _0x8
000107 81a8      	LD   R26,Y
000108 56ac      	SUBI R26,-LOW(148)
000109 dfcc      	RCALL _LCD_sendCmd
00010a c007      	RJMP _0x5
                 _0x8:
00010b 30e3      	CPI  R30,LOW(0x3)
00010c e0a0      	LDI  R26,HIGH(0x3)
00010d 07fa      	CPC  R31,R26
00010e f419      	BRNE _0xA
00010f 81a8      	LD   R26,Y
000110 52ac      	SUBI R26,-LOW(212)
000111 dfc4      	RCALL _LCD_sendCmd
                 _0xA:
                 _0x5:
                 _0xB:
000112 81ac      	LDD  R26,Y+4
000113 81bd      	LDD  R27,Y+4+1
000114 91ec      	LD   R30,X
000115 30e0      	CPI  R30,0
000116 f031      	BREQ _0xD
000117 91ed      	LD   R30,X+
000118 83ac      	STD  Y+4,R26
000119 83bd      	STD  Y+4+1,R27
00011a 2fae      	MOV  R26,R30
00011b dfc8      	RCALL _LCD_sendData
00011c cff5      	RJMP _0xB
                 _0xD:
00011d 9626      	ADIW R28,6
00011e 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 000D {
                 _main:
                 ; .FSTART _main
                 ; 0000 000E     char data[20];
                 ; 0000 000F     int count = 0;
                 ; 0000 0010 
                 ; 0000 0011     setup_port();
00011f 9764      	SBIW R28,20
                 ;	data -> Y+0
                 ;	count -> R16,R17
                +
000120 e000     +LDI R16 , LOW ( 0 )
000121 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000122 df7e      	RCALL _setup_port
                 ; 0000 0012 
                 ; 0000 0013     LCD_init();
000123 dfb5      	RCALL _LCD_init
                 ; 0000 0014 
                 ; 0000 0015     LCD_printStr("TT HTN", 0, 0);
                +
000124 e0e0     +LDI R30 , LOW ( _0xE + ( 0 ) )
000125 e0f5     +LDI R31 , HIGH ( _0xE + ( 0 ) )
                 	__POINTW1MN _0xE,0
000126 93fa      	ST   -Y,R31
000127 93ea      	ST   -Y,R30
000128 e0e0      	LDI  R30,LOW(0)
000129 e0f0      	LDI  R31,HIGH(0)
00012a 93fa      	ST   -Y,R31
00012b 93ea      	ST   -Y,R30
00012c e0a0      	LDI  R26,LOW(0)
00012d e0b0      	LDI  R27,0
00012e dfc2      	RCALL _LCD_printStr
                 ; 0000 0016     LCD_printStr("NewBie: Danh", 1, 1);
                +
00012f e0e7     +LDI R30 , LOW ( _0xE + ( 7 ) )
000130 e0f5     +LDI R31 , HIGH ( _0xE + ( 7 ) )
                 	__POINTW1MN _0xE,7
000131 93fa      	ST   -Y,R31
000132 93ea      	ST   -Y,R30
000133 e0e1      	LDI  R30,LOW(1)
000134 e0f0      	LDI  R31,HIGH(1)
000135 93fa      	ST   -Y,R31
000136 93ea      	ST   -Y,R30
000137 e0a1      	LDI  R26,LOW(1)
000138 e0b0      	LDI  R27,0
000139 dfb7      	RCALL _LCD_printStr
                 ; 0000 0017     LCD_printStr("See you soon!", 2, 2);
                +
00013a e1e4     +LDI R30 , LOW ( _0xE + ( 20 ) )
00013b e0f5     +LDI R31 , HIGH ( _0xE + ( 20 ) )
                 	__POINTW1MN _0xE,20
00013c 93fa      	ST   -Y,R31
00013d 93ea      	ST   -Y,R30
00013e e0e2      	LDI  R30,LOW(2)
00013f e0f0      	LDI  R31,HIGH(2)
000140 93fa      	ST   -Y,R31
000141 93ea      	ST   -Y,R30
000142 e0a2      	LDI  R26,LOW(2)
000143 e0b0      	LDI  R27,0
000144 dfac      	RCALL _LCD_printStr
                 ; 0000 0018 
                 ; 0000 0019     while (1)
                 _0xF:
                 ; 0000 001A     {
                 ; 0000 001B         sprintf(data, "Count up: %d", count++);
000145 01fe      	MOVW R30,R28
000146 93fa      	ST   -Y,R31
000147 93ea      	ST   -Y,R30
                +
000148 ece0     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
000149 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
00014a 93fa      	ST   -Y,R31
00014b 93ea      	ST   -Y,R30
00014c 01f8      	MOVW R30,R16
                +
00014d 5f0f     +SUBI R16 , LOW ( - 1 )
00014e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00014f 940e 036b 	CALL __CWD1
000151 940e 0378 	CALL __PUTPARD1
000153 e084      	LDI  R24,4
000154 940e 02db 	CALL _sprintf
000156 9628      	ADIW R28,8
                 ; 0000 001C         LCD_printStr(data, 3, 3);
000157 01fe      	MOVW R30,R28
000158 93fa      	ST   -Y,R31
000159 93ea      	ST   -Y,R30
00015a e0e3      	LDI  R30,LOW(3)
00015b e0f0      	LDI  R31,HIGH(3)
00015c 93fa      	ST   -Y,R31
00015d 93ea      	ST   -Y,R30
00015e e0a3      	LDI  R26,LOW(3)
00015f e0b0      	LDI  R27,0
000160 df90      	RCALL _LCD_printStr
                 ; 0000 001D         delay_ms(100);
000161 e6a4      	LDI  R26,LOW(100)
000162 e0b0      	LDI  R27,0
000163 940e 0359 	CALL _delay_ms
                 ; 0000 001E     }
000165 cfdf      	RJMP _0xF
                 ; 0000 001F }
                 _0x12:
000166 cfff      	RJMP _0x12
                 ; .FEND
                 
                 	.DSEG
                 _0xE:
000500           	.BYTE 0x22
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000167 93ba      	ST   -Y,R27
000168 93aa      	ST   -Y,R26
000169 931a      	ST   -Y,R17
00016a 930a      	ST   -Y,R16
00016b 81aa      	LDD  R26,Y+2
00016c 81bb      	LDD  R27,Y+2+1
00016d 9612      	ADIW R26,2
00016e 940e 0370 	CALL __GETW1P
000170 9730      	SBIW R30,0
000171 f159      	BREQ _0x2000010
000172 81aa      	LDD  R26,Y+2
000173 81bb      	LDD  R27,Y+2+1
000174 9614      	ADIW R26,4
000175 940e 0370 	CALL __GETW1P
000177 018f      	MOVW R16,R30
000178 9730      	SBIW R30,0
000179 f061      	BREQ _0x2000012
                +
00017a 3002     +CPI R16 , LOW ( 2 )
00017b e0e0     +LDI R30 , HIGH ( 2 )
00017c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00017d f098      	BRLO _0x2000013
00017e 01f8      	MOVW R30,R16
00017f 9731      	SBIW R30,1
000180 018f      	MOVW R16,R30
                +
000181 81aa     +LDD R26 , Y + 2
000182 81bb     +LDD R27 , Y + 2 + 1
000183 9614     +ADIW R26 , 4
000184 93ed     +ST X + , R30
000185 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000186 81aa      	LDD  R26,Y+2
000187 81bb      	LDD  R27,Y+2+1
000188 9612      	ADIW R26,2
000189 91ed      	LD   R30,X+
00018a 91fd      	LD   R31,X+
00018b 9631      	ADIW R30,1
00018c 93fe      	ST   -X,R31
00018d 93ee      	ST   -X,R30
00018e 9731      	SBIW R30,1
00018f 81ac      	LDD  R26,Y+4
000190 83a0      	STD  Z+0,R26
                 _0x2000013:
000191 81aa      	LDD  R26,Y+2
000192 81bb      	LDD  R27,Y+2+1
000193 940e 0370 	CALL __GETW1P
000195 23ff      	TST  R31
000196 f02a      	BRMI _0x2000014
000197 91ed      	LD   R30,X+
000198 91fd      	LD   R31,X+
000199 9631      	ADIW R30,1
00019a 93fe      	ST   -X,R31
00019b 93ee      	ST   -X,R30
                 _0x2000014:
00019c c006      	RJMP _0x2000015
                 _0x2000010:
00019d 81aa      	LDD  R26,Y+2
00019e 81bb      	LDD  R27,Y+2+1
00019f efef      	LDI  R30,LOW(65535)
0001a0 efff      	LDI  R31,HIGH(65535)
0001a1 93ed      	ST   X+,R30
0001a2 93fc      	ST   X,R31
                 _0x2000015:
0001a3 8119      	LDD  R17,Y+1
0001a4 8108      	LDD  R16,Y+0
0001a5 9625      	ADIW R28,5
0001a6 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001a7 93ba      	ST   -Y,R27
0001a8 93aa      	ST   -Y,R26
0001a9 9726      	SBIW R28,6
0001aa 940e 037d 	CALL __SAVELOCR6
0001ac e010      	LDI  R17,0
0001ad 85ac      	LDD  R26,Y+12
0001ae 85bd      	LDD  R27,Y+12+1
0001af e0e0      	LDI  R30,LOW(0)
0001b0 e0f0      	LDI  R31,HIGH(0)
0001b1 93ed      	ST   X+,R30
0001b2 93fc      	ST   X,R31
                 _0x2000016:
0001b3 89ea      	LDD  R30,Y+18
0001b4 89fb      	LDD  R31,Y+18+1
0001b5 9631      	ADIW R30,1
0001b6 8bea      	STD  Y+18,R30
0001b7 8bfb      	STD  Y+18+1,R31
0001b8 9731      	SBIW R30,1
0001b9 91e4      	LPM  R30,Z
0001ba 2f2e      	MOV  R18,R30
0001bb 30e0      	CPI  R30,0
0001bc f409      	BRNE PC+2
0001bd c115      	RJMP _0x2000018
0001be 2fe1      	MOV  R30,R17
0001bf 30e0      	CPI  R30,0
0001c0 f439      	BRNE _0x200001C
0001c1 3225      	CPI  R18,37
0001c2 f411      	BRNE _0x200001D
0001c3 e011      	LDI  R17,LOW(1)
0001c4 c002      	RJMP _0x200001E
                 _0x200001D:
0001c5 940e 032d 	CALL SUBOPT_0x1
                 _0x200001E:
0001c7 c10a      	RJMP _0x200001B
                 _0x200001C:
0001c8 30e1      	CPI  R30,LOW(0x1)
0001c9 f4a9      	BRNE _0x200001F
0001ca 3225      	CPI  R18,37
0001cb f419      	BRNE _0x2000020
0001cc 940e 032d 	CALL SUBOPT_0x1
0001ce c102      	RJMP _0x20000CC
                 _0x2000020:
0001cf e012      	LDI  R17,LOW(2)
0001d0 e040      	LDI  R20,LOW(0)
0001d1 e000      	LDI  R16,LOW(0)
0001d2 322d      	CPI  R18,45
0001d3 f411      	BRNE _0x2000021
0001d4 e001      	LDI  R16,LOW(1)
0001d5 c0fc      	RJMP _0x200001B
                 _0x2000021:
0001d6 322b      	CPI  R18,43
0001d7 f411      	BRNE _0x2000022
0001d8 e24b      	LDI  R20,LOW(43)
0001d9 c0f8      	RJMP _0x200001B
                 _0x2000022:
0001da 3220      	CPI  R18,32
0001db f411      	BRNE _0x2000023
0001dc e240      	LDI  R20,LOW(32)
0001dd c0f4      	RJMP _0x200001B
                 _0x2000023:
0001de c002      	RJMP _0x2000024
                 _0x200001F:
0001df 30e2      	CPI  R30,LOW(0x2)
0001e0 f439      	BRNE _0x2000025
                 _0x2000024:
0001e1 e050      	LDI  R21,LOW(0)
0001e2 e013      	LDI  R17,LOW(3)
0001e3 3320      	CPI  R18,48
0001e4 f411      	BRNE _0x2000026
0001e5 6800      	ORI  R16,LOW(128)
0001e6 c0eb      	RJMP _0x200001B
                 _0x2000026:
0001e7 c003      	RJMP _0x2000027
                 _0x2000025:
0001e8 30e3      	CPI  R30,LOW(0x3)
0001e9 f009      	BREQ PC+2
0001ea c0e7      	RJMP _0x200001B
                 _0x2000027:
0001eb 3320      	CPI  R18,48
0001ec f010      	BRLO _0x200002A
0001ed 332a      	CPI  R18,58
0001ee f008      	BRLO _0x200002B
                 _0x200002A:
0001ef c007      	RJMP _0x2000029
                 _0x200002B:
0001f0 e0aa      	LDI  R26,LOW(10)
0001f1 9f5a      	MUL  R21,R26
0001f2 2d50      	MOV  R21,R0
0001f3 2fe2      	MOV  R30,R18
0001f4 53e0      	SUBI R30,LOW(48)
0001f5 0f5e      	ADD  R21,R30
0001f6 c0db      	RJMP _0x200001B
                 _0x2000029:
0001f7 2fe2      	MOV  R30,R18
0001f8 36e3      	CPI  R30,LOW(0x63)
0001f9 f449      	BRNE _0x200002F
0001fa 940e 0334 	CALL SUBOPT_0x2
0001fc 89e8      	LDD  R30,Y+16
0001fd 89f9      	LDD  R31,Y+16+1
0001fe 81a4      	LDD  R26,Z+4
0001ff 93aa      	ST   -Y,R26
000200 940e 033a 	CALL SUBOPT_0x3
000202 c0ce      	RJMP _0x2000030
                 _0x200002F:
000203 37e3      	CPI  R30,LOW(0x73)
000204 f441      	BRNE _0x2000032
000205 940e 0334 	CALL SUBOPT_0x2
000207 940e 0340 	CALL SUBOPT_0x4
000209 940e 030f 	CALL _strlen
00020b 2f1e      	MOV  R17,R30
00020c c00a      	RJMP _0x2000033
                 _0x2000032:
00020d 37e0      	CPI  R30,LOW(0x70)
00020e f461      	BRNE _0x2000035
00020f 940e 0334 	CALL SUBOPT_0x2
000211 940e 0340 	CALL SUBOPT_0x4
000213 940e 031b 	CALL _strlenf
000215 2f1e      	MOV  R17,R30
000216 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000217 6002      	ORI  R16,LOW(2)
000218 770f      	ANDI R16,LOW(127)
000219 e030      	LDI  R19,LOW(0)
00021a c034      	RJMP _0x2000036
                 _0x2000035:
00021b 36e4      	CPI  R30,LOW(0x64)
00021c f011      	BREQ _0x2000039
00021d 36e9      	CPI  R30,LOW(0x69)
00021e f411      	BRNE _0x200003A
                 _0x2000039:
00021f 6004      	ORI  R16,LOW(4)
000220 c002      	RJMP _0x200003B
                 _0x200003A:
000221 37e5      	CPI  R30,LOW(0x75)
000222 f431      	BRNE _0x200003C
                 _0x200003B:
000223 e8ec      	LDI  R30,LOW(_tbl10_G100*2)
000224 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000225 83ee      	STD  Y+6,R30
000226 83ff      	STD  Y+6+1,R31
000227 e015      	LDI  R17,LOW(5)
000228 c00c      	RJMP _0x200003D
                 _0x200003C:
000229 35e8      	CPI  R30,LOW(0x58)
00022a f411      	BRNE _0x200003F
00022b 6008      	ORI  R16,LOW(8)
00022c c003      	RJMP _0x2000040
                 _0x200003F:
00022d 37e8      	CPI  R30,LOW(0x78)
00022e f009      	BREQ PC+2
00022f c0a1      	RJMP _0x2000071
                 _0x2000040:
000230 e9e6      	LDI  R30,LOW(_tbl16_G100*2)
000231 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000232 83ee      	STD  Y+6,R30
000233 83ff      	STD  Y+6+1,R31
000234 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000235 ff02      	SBRS R16,2
000236 c014      	RJMP _0x2000042
000237 940e 0334 	CALL SUBOPT_0x2
000239 940e 034a 	CALL SUBOPT_0x5
00023b 85ab      	LDD  R26,Y+11
00023c 23aa      	TST  R26
00023d f43a      	BRPL _0x2000043
00023e 85ea      	LDD  R30,Y+10
00023f 85fb      	LDD  R31,Y+10+1
000240 940e 0367 	CALL __ANEGW1
000242 87ea      	STD  Y+10,R30
000243 87fb      	STD  Y+10+1,R31
000244 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000245 3040      	CPI  R20,0
000246 f011      	BREQ _0x2000044
000247 5f1f      	SUBI R17,-LOW(1)
000248 c001      	RJMP _0x2000045
                 _0x2000044:
000249 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00024a c004      	RJMP _0x2000046
                 _0x2000042:
00024b 940e 0334 	CALL SUBOPT_0x2
00024d 940e 034a 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
00024f fd00      	SBRC R16,0
000250 c011      	RJMP _0x2000047
                 _0x2000048:
000251 1715      	CP   R17,R21
000252 f478      	BRSH _0x200004A
000253 ff07      	SBRS R16,7
000254 c008      	RJMP _0x200004B
000255 ff02      	SBRS R16,2
000256 c004      	RJMP _0x200004C
000257 7f0b      	ANDI R16,LOW(251)
000258 2f24      	MOV  R18,R20
000259 5011      	SUBI R17,LOW(1)
00025a c001      	RJMP _0x200004D
                 _0x200004C:
00025b e320      	LDI  R18,LOW(48)
                 _0x200004D:
00025c c001      	RJMP _0x200004E
                 _0x200004B:
00025d e220      	LDI  R18,LOW(32)
                 _0x200004E:
00025e 940e 032d 	CALL SUBOPT_0x1
000260 5051      	SUBI R21,LOW(1)
000261 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000262 2f31      	MOV  R19,R17
000263 ff01      	SBRS R16,1
000264 c017      	RJMP _0x200004F
                 _0x2000050:
000265 3030      	CPI  R19,0
000266 f0a1      	BREQ _0x2000052
000267 ff03      	SBRS R16,3
000268 c006      	RJMP _0x2000053
000269 81ee      	LDD  R30,Y+6
00026a 81ff      	LDD  R31,Y+6+1
00026b 9125      	LPM  R18,Z+
00026c 83ee      	STD  Y+6,R30
00026d 83ff      	STD  Y+6+1,R31
00026e c005      	RJMP _0x2000054
                 _0x2000053:
00026f 81ae      	LDD  R26,Y+6
000270 81bf      	LDD  R27,Y+6+1
000271 912d      	LD   R18,X+
000272 83ae      	STD  Y+6,R26
000273 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000274 940e 032d 	CALL SUBOPT_0x1
000276 3050      	CPI  R21,0
000277 f009      	BREQ _0x2000055
000278 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000279 5031      	SUBI R19,LOW(1)
00027a cfea      	RJMP _0x2000050
                 _0x2000052:
00027b c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00027c e320      	LDI  R18,LOW(48)
00027d 81ee      	LDD  R30,Y+6
00027e 81ff      	LDD  R31,Y+6+1
00027f 940e 0374 	CALL __GETW1PF
000281 87e8      	STD  Y+8,R30
000282 87f9      	STD  Y+8+1,R31
000283 81ee      	LDD  R30,Y+6
000284 81ff      	LDD  R31,Y+6+1
000285 9632      	ADIW R30,2
000286 83ee      	STD  Y+6,R30
000287 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000288 85e8      	LDD  R30,Y+8
000289 85f9      	LDD  R31,Y+8+1
00028a 85aa      	LDD  R26,Y+10
00028b 85bb      	LDD  R27,Y+10+1
00028c 17ae      	CP   R26,R30
00028d 07bf      	CPC  R27,R31
00028e f050      	BRLO _0x200005C
00028f 5f2f      	SUBI R18,-LOW(1)
000290 85a8      	LDD  R26,Y+8
000291 85b9      	LDD  R27,Y+8+1
000292 85ea      	LDD  R30,Y+10
000293 85fb      	LDD  R31,Y+10+1
000294 1bea      	SUB  R30,R26
000295 0bfb      	SBC  R31,R27
000296 87ea      	STD  Y+10,R30
000297 87fb      	STD  Y+10+1,R31
000298 cfef      	RJMP _0x200005A
                 _0x200005C:
000299 332a      	CPI  R18,58
00029a f028      	BRLO _0x200005D
00029b ff03      	SBRS R16,3
00029c c002      	RJMP _0x200005E
00029d 5f29      	SUBI R18,-LOW(7)
00029e c001      	RJMP _0x200005F
                 _0x200005E:
00029f 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0002a0 fd04      	SBRC R16,4
0002a1 c01a      	RJMP _0x2000061
0002a2 3321      	CPI  R18,49
0002a3 f420      	BRSH _0x2000063
0002a4 85a8      	LDD  R26,Y+8
0002a5 85b9      	LDD  R27,Y+8+1
0002a6 9711      	SBIW R26,1
0002a7 f409      	BRNE _0x2000062
                 _0x2000063:
0002a8 c009      	RJMP _0x20000CD
                 _0x2000062:
0002a9 1753      	CP   R21,R19
0002aa f010      	BRLO _0x2000067
0002ab ff00      	SBRS R16,0
0002ac c001      	RJMP _0x2000068
                 _0x2000067:
0002ad c013      	RJMP _0x2000066
                 _0x2000068:
0002ae e220      	LDI  R18,LOW(32)
0002af ff07      	SBRS R16,7
0002b0 c00b      	RJMP _0x2000069
0002b1 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0002b2 6100      	ORI  R16,LOW(16)
0002b3 ff02      	SBRS R16,2
0002b4 c007      	RJMP _0x200006A
0002b5 7f0b      	ANDI R16,LOW(251)
0002b6 934a      	ST   -Y,R20
0002b7 940e 033a 	CALL SUBOPT_0x3
0002b9 3050      	CPI  R21,0
0002ba f009      	BREQ _0x200006B
0002bb 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0002bc 940e 032d 	CALL SUBOPT_0x1
0002be 3050      	CPI  R21,0
0002bf f009      	BREQ _0x200006C
0002c0 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0002c1 5031      	SUBI R19,LOW(1)
0002c2 85a8      	LDD  R26,Y+8
0002c3 85b9      	LDD  R27,Y+8+1
0002c4 9712      	SBIW R26,2
0002c5 f008      	BRLO _0x2000059
0002c6 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0002c7 ff00      	SBRS R16,0
0002c8 c008      	RJMP _0x200006D
                 _0x200006E:
0002c9 3050      	CPI  R21,0
0002ca f031      	BREQ _0x2000070
0002cb 5051      	SUBI R21,LOW(1)
0002cc e2e0      	LDI  R30,LOW(32)
0002cd 93ea      	ST   -Y,R30
0002ce 940e 033a 	CALL SUBOPT_0x3
0002d0 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0002d1 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0002d2 cee0      	RJMP _0x2000016
                 _0x2000018:
0002d3 85ac      	LDD  R26,Y+12
0002d4 85bd      	LDD  R27,Y+12+1
0002d5 940e 0370 	CALL __GETW1P
0002d7 940e 0384 	CALL __LOADLOCR6
0002d9 9664      	ADIW R28,20
0002da 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002db 92ff      	PUSH R15
0002dc 2ef8      	MOV  R15,R24
0002dd 9726      	SBIW R28,6
0002de 940e 037f 	CALL __SAVELOCR4
0002e0 940e 0352 	CALL SUBOPT_0x6
0002e2 9730      	SBIW R30,0
0002e3 f419      	BRNE _0x2000072
0002e4 efef      	LDI  R30,LOW(65535)
0002e5 efff      	LDI  R31,HIGH(65535)
0002e6 c023      	RJMP _0x2060001
                 _0x2000072:
0002e7 01de      	MOVW R26,R28
0002e8 9616      	ADIW R26,6
0002e9 940e 0363 	CALL __ADDW2R15
0002eb 018d      	MOVW R16,R26
0002ec 940e 0352 	CALL SUBOPT_0x6
0002ee 83ee      	STD  Y+6,R30
0002ef 83ff      	STD  Y+6+1,R31
0002f0 e0e0      	LDI  R30,LOW(0)
0002f1 87e8      	STD  Y+8,R30
0002f2 87e9      	STD  Y+8+1,R30
0002f3 01de      	MOVW R26,R28
0002f4 961a      	ADIW R26,10
0002f5 940e 0363 	CALL __ADDW2R15
0002f7 940e 0370 	CALL __GETW1P
0002f9 93fa      	ST   -Y,R31
0002fa 93ea      	ST   -Y,R30
0002fb 931a      	ST   -Y,R17
0002fc 930a      	ST   -Y,R16
0002fd e6e7      	LDI  R30,LOW(_put_buff_G100)
0002fe e0f1      	LDI  R31,HIGH(_put_buff_G100)
0002ff 93fa      	ST   -Y,R31
000300 93ea      	ST   -Y,R30
000301 01de      	MOVW R26,R28
000302 961a      	ADIW R26,10
000303 dea3      	RCALL __print_G100
000304 019f      	MOVW R18,R30
000305 81ae      	LDD  R26,Y+6
000306 81bf      	LDD  R27,Y+6+1
000307 e0e0      	LDI  R30,LOW(0)
000308 93ec      	ST   X,R30
000309 01f9      	MOVW R30,R18
                 _0x2060001:
00030a 940e 0386 	CALL __LOADLOCR4
00030c 962a      	ADIW R28,10
00030d 90ff      	POP  R15
00030e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00030f 93ba      	ST   -Y,R27
000310 93aa      	ST   -Y,R26
000311 91a9          ld   r26,y+
000312 91b9          ld   r27,y+
000313 27ee          clr  r30
000314 27ff          clr  r31
                 strlen0:
000315 916d          ld   r22,x+
000316 2366          tst  r22
000317 f011          breq strlen1
000318 9631          adiw r30,1
000319 cffb          rjmp strlen0
                 strlen1:
00031a 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00031b 93ba      	ST   -Y,R27
00031c 93aa      	ST   -Y,R26
00031d 27aa          clr  r26
00031e 27bb          clr  r27
00031f 91e9          ld   r30,y+
000320 91f9          ld   r31,y+
                 strlenf0:
000321 9005      	lpm  r0,z+
000322 2000          tst  r0
000323 f011          breq strlenf1
000324 9611          adiw r26,1
000325 cffb          rjmp strlenf0
                 strlenf1:
000326 01fd          movw r30,r26
000327 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000328 bbe2      	OUT  0x12,R30
000329 b3e2      	IN   R30,0x12
00032a 2fae      	MOV  R26,R30
00032b 81e8      	LD   R30,Y
00032c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
00032d 932a      	ST   -Y,R18
00032e 85ad      	LDD  R26,Y+13
00032f 85be      	LDD  R27,Y+13+1
000330 85ef      	LDD  R30,Y+15
000331 89f8      	LDD  R31,Y+15+1
000332 9509      	ICALL
000333 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
000334 89e8      	LDD  R30,Y+16
000335 89f9      	LDD  R31,Y+16+1
000336 9734      	SBIW R30,4
000337 8be8      	STD  Y+16,R30
000338 8bf9      	STD  Y+16+1,R31
000339 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
00033a 85ad      	LDD  R26,Y+13
00033b 85be      	LDD  R27,Y+13+1
00033c 85ef      	LDD  R30,Y+15
00033d 89f8      	LDD  R31,Y+15+1
00033e 9509      	ICALL
00033f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000340 89a8      	LDD  R26,Y+16
000341 89b9      	LDD  R27,Y+16+1
000342 9614      	ADIW R26,4
000343 940e 0370 	CALL __GETW1P
000345 83ee      	STD  Y+6,R30
000346 83ff      	STD  Y+6+1,R31
000347 81ae      	LDD  R26,Y+6
000348 81bf      	LDD  R27,Y+6+1
000349 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
00034a 89a8      	LDD  R26,Y+16
00034b 89b9      	LDD  R27,Y+16+1
00034c 9614      	ADIW R26,4
00034d 940e 0370 	CALL __GETW1P
00034f 87ea      	STD  Y+10,R30
000350 87fb      	STD  Y+10+1,R31
000351 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000352 01de      	MOVW R26,R28
000353 961c      	ADIW R26,12
000354 940e 0363 	CALL __ADDW2R15
000356 940e 0370 	CALL __GETW1P
000358 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000359 9610      	adiw r26,0
00035a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00035b ed80     +LDI R24 , LOW ( 0x7D0 )
00035c e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00035d 9701     +SBIW R24 , 1
00035e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00035f 95a8      	wdr
000360 9711      	sbiw r26,1
000361 f7c9      	brne __delay_ms0
                 __delay_ms1:
000362 9508      	ret
                 
                 __ADDW2R15:
000363 2400      	CLR  R0
000364 0daf      	ADD  R26,R15
000365 1db0      	ADC  R27,R0
000366 9508      	RET
                 
                 __ANEGW1:
000367 95f1      	NEG  R31
000368 95e1      	NEG  R30
000369 40f0      	SBCI R31,0
00036a 9508      	RET
                 
                 __CWD1:
00036b 2f6f      	MOV  R22,R31
00036c 0f66      	ADD  R22,R22
00036d 0b66      	SBC  R22,R22
00036e 2f76      	MOV  R23,R22
00036f 9508      	RET
                 
                 __GETW1P:
000370 91ed      	LD   R30,X+
000371 91fc      	LD   R31,X
000372 9711      	SBIW R26,1
000373 9508      	RET
                 
                 __GETW1PF:
000374 9005      	LPM  R0,Z+
000375 91f4      	LPM  R31,Z
000376 2de0      	MOV  R30,R0
000377 9508      	RET
                 
                 __PUTPARD1:
000378 937a      	ST   -Y,R23
000379 936a      	ST   -Y,R22
00037a 93fa      	ST   -Y,R31
00037b 93ea      	ST   -Y,R30
00037c 9508      	RET
                 
                 __SAVELOCR6:
00037d 935a      	ST   -Y,R21
                 __SAVELOCR5:
00037e 934a      	ST   -Y,R20
                 __SAVELOCR4:
00037f 933a      	ST   -Y,R19
                 __SAVELOCR3:
000380 932a      	ST   -Y,R18
                 __SAVELOCR2:
000381 931a      	ST   -Y,R17
000382 930a      	ST   -Y,R16
000383 9508      	RET
                 
                 __LOADLOCR6:
000384 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000385 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000386 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000387 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000388 8119      	LDD  R17,Y+1
000389 8108      	LD   R16,Y
00038a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  37 r17:  22 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  12 r25:   3 r26: 102 r27:  42 r28:  16 r29:   1 r30: 178 r31:  74 
x  :  24 y  : 170 z  :  14 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  23 and   :   0 andi  :  13 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  16 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   1 brne  :  27 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  48 
cbi   :   2 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   5 cpi   :  34 cpse  :   0 dec   :   1 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   2 inc   :   0 jmp   :  36 ld    :  22 ldd   :  74 
ldi   :  95 lds   :   0 lpm   :  14 lsl   :   3 lsr   :   6 mov   :  16 
movw  :  17 mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   4 ori   :   6 out   :   9 pop   :   1 push  :   1 rcall :  21 
ret   :  26 reti  :   0 rjmp  :  60 rol   :   0 ror   :   2 sbc   :   2 
sbci  :   2 sbi   :   2 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  69 std   :  31 sts   :   1 sub   :   1 subi  :  18 
swap  :   4 tst   :   4 wdr   :   1 
Instructions used: 54 out of 117 (46.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000716   1728     86   1814  131072   1.4%
[.dseg] 0x000100 0x000522      0     34     34    4096   0.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 1 warnings
